-- VHDL Entity last_project.FLOW_CHART1.interface
--
-- Created:
--          by - Omark.UNKNOWN (DESKTOP-16BG4K6)
--          at - 15:34:19 05/10/2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY FLOW_CHART1 IS
   PORT( 
      en1     : IN     std_logic;
      en2     : IN     std_logic;
      inp1    : IN     std_logic_vector (5 DOWNTO 0);
      inp2    : IN     std_logic_vector (5 DOWNTO 0);
      sel     : IN     std_logic_vector (1 DOWNTO 0);
      carry   : OUT    std_logic;
      equal   : OUT    std_logic;
      greater : OUT    std_logic;
      less    : OUT    std_logic;
      mul_oup : OUT    std_logic_vector (11 DOWNTO 0);
      oup     : OUT    std_logic_vector (5 DOWNTO 0);
      sum_oup : OUT    std_logic_vector (5 DOWNTO 0)
   );

-- Declarations

END FLOW_CHART1 ;

--
-- VHDL Architecture last_project.FLOW_CHART1.flow
--
-- Created:
--          by - Omark.UNKNOWN (DESKTOP-16BG4K6)
--          at - 15:34:19 05/10/2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
ARCHITECTURE flow OF FLOW_CHART1 IS

BEGIN

   -----------------------------------------------------------------
   process0_proc : PROCESS (en1, en2, inp1, inp2, sel)
   -----------------------------------------------------------------

   -- Process declarations
   variable var: std_logic_vector(5 downto 0);


   BEGIN
      IF en1 = '1'  AND en2 = '1' THEN
         CASE sel IS
         WHEN "00" =>
            var := inp1 + inp2;
            sum_oup <= var(5 downto 0);
            carry <= var(6);
         WHEN "11" =>
            mul_oup <= inp1 * inp2;
         WHEN "10" =>
            oup <= NOT inp1;
         WHEN "01" =>
            IF inp1 > inp2 THEN
               greater <= '1';
            ELSIF inp1 < inp2 THEN
               less <= '1';
            ELSE
               equal <= '1';
            END IF;
         WHEN OTHERS =>
            null;
         END CASE;
      END IF;
   END PROCESS process0_proc;


END flow;
