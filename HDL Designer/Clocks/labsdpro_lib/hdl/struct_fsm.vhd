-- VHDL Entity labsdpro_lib.struct.interface
--
-- Created:
--          by - Omark.UNKNOWN (DESKTOP-16BG4K6)
--          at - 11:30:38 05/24/2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY struct IS
   PORT( 
      clk  : IN     std_logic;
      rst  : IN     std_logic;
      clok : OUT    std_logic;
      cluk : OUT    std_logic;
      cou  : BUFFER integer RANGE 15 DOWNTO 0
   );

-- Declarations

END struct ;

--
-- VHDL Architecture labsdpro_lib.struct.fsm
--
-- Created:
--          by - Omark.UNKNOWN (DESKTOP-16BG4K6)
--          at - 11:30:38 05/24/2022
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
 
ARCHITECTURE fsm OF struct IS

   TYPE STATE_TYPE IS (
      s0,
      s1,
      s2,
      s3,
      s4
   );
 
   -- Declare current and next state signals
   SIGNAL current_state : STATE_TYPE;
   SIGNAL next_state : STATE_TYPE;

BEGIN

   -----------------------------------------------------------------
   clocked_proc : PROCESS ( 
      clk,
      rst
   )
   -----------------------------------------------------------------
   BEGIN
      IF (rst = '0') THEN
         current_state <= s0;
      ELSIF (clk'EVENT AND clk = '1') THEN
         current_state <= next_state;
      END IF;
   END PROCESS clocked_proc;
 
   -----------------------------------------------------------------
   nextstate_proc : PROCESS ( 
      cou,
      current_state
   )
   -----------------------------------------------------------------
   BEGIN
      CASE current_state IS
         WHEN s0 => 
            IF (cou = 3) THEN 
               next_state <= s1;
            ELSE
               next_state <= s0;
            END IF;
         WHEN s1 => 
            IF (cou = 6) THEN 
               next_state <= s2;
            ELSE
               next_state <= s1;
            END IF;
         WHEN s2 => 
            IF (cou = 9) THEN 
               next_state <= s3;
            ELSE
               next_state <= s2;
            END IF;
         WHEN s3 => 
            IF (cou = 11) THEN 
               next_state <= s4;
            ELSE
               next_state <= s3;
            END IF;
         WHEN s4 => 
            next_state <= s4;
         WHEN OTHERS =>
            next_state <= s0;
      END CASE;
   END PROCESS nextstate_proc;
 
   -----------------------------------------------------------------
   output_proc : PROCESS ( 
      cou,
      current_state
   )
   -----------------------------------------------------------------
   BEGIN

      -- Combined Actions
      CASE current_state IS
         WHEN s0 => 
            clok <= '0' ;
            cluk <= '0' ;
            cou <= cou +1;
         WHEN s1 => 
            clok <= '1' ;
            cluk <= '0' ;
            cou <= cou +1;
         WHEN s2 => 
            clok <= '0' ;
            cluk <= '0' ;
            cou <= cou +1;
         WHEN s3 => 
            clok <= '0' ;
            cluk <= '1' ;
            cou <= cou +1;
         WHEN s4 => 
            clok <= '0' ;
            cluk <= '0' ;
            cou <= cou +1;
         WHEN OTHERS =>
            NULL;
      END CASE;
   END PROCESS output_proc;
 
END fsm;
